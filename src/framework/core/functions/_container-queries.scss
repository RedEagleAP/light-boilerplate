// ===================================================
// Various Color Functions
// ===================================================

/// Add Backslashes to the Query
///
/// @group core-containerQuery
///
/// @param  {string}   $query  - Query Condition
/// @param  {string}   $search - Query Condition
///
/// @return {string}
///
/// @private
@function cq-prolyfill-add-backslash($string, $search) {
  $index: str-index($string, $search);
  @while $index {
    $string: str-insert($string, '\\', $index);
    $newIndex: if(
        str-length($string) < $index + 2,
        null,
        str-index(str-slice($string, $index + 2), $search)
    );
    $index: if($newIndex, $index + 1 + $newIndex, null);
  }
  @return $string;
}

/// Remove
///
/// @group core-containerQuery
///
/// @param  {string}   $query  - Query Condition
/// @param  {string}   $search - Query Condition
///
/// @return {string}
///
/// @private
@function cq-prolyfill-remove($string, $search) {
  $index: str-index($string, $search);
  @while $index {
    $string: str-slice($string, 1, $index - 1) + str-slice($string, $index + 1);
    $index: str-index($string, $search);
  }
  @return $string;
}

/// Escape Extrasigns
///
/// @group core-containerQuery
///
/// @param  {string}   $query  - Query Condition
///
/// @return {string}
///
/// @private
@function cq-prolyfill-escape($string) {
  @each $char in '[' ']' '!' '"' '#' '$' '%' '&' "'" '(' ')' '*' '+' ',' '.' '/' ':' ';' '<' '=' '>' '?' '@' '^' '`' '{' '|' '}' '~' {
    $string: cq-prolyfill-add-backslash($string, $char);
  }
  @return $string;
}

/// Remove Spaces
///
/// @group core-containerQuery
///
/// @param  {string}   $query  - Query Condition
///
/// @return {string}
///
/// @private
@function cq-prolyfill-strip-spaces($string) {
  // tab, line feed, carriage return and space
  $chars: "\9\a\d\20";
  @for $i from 1 through str-length($chars) {
    $string: cq-prolyfill-remove(
        $string,
        str-slice($chars, $i, $i)
    );
  }
  @return $string;
}

/// Build the ContainerQuery (https://github.com/ausi/cq-prolyfill)
///
/// @group core-containerQuery
///
/// @param  {string}   $query - Query Condition
///
/// @return {string}
///
/// @example scss - scss
///   .test#{cq('width >= 800px')} {
///     color: red;
///   }
@function cq($query) {
  @return unquote(".\\:container\\(" + cq-prolyfill-escape(cq-prolyfill-strip-spaces(to-lower-case($query))) + "\\)");
}


/// ContainerQuery as Mixin
///
/// @group core-containerQuery
///
/// @param  {string}   $query - Query Condition
@mixin cq($condition) {
  $selector: &;

  @at-root {
    #{$selector}#{cq('#{$condition}')} {
      @content;
    }
  }
}

/// ContainerQuery as Mixin with Root Selector
///
/// @group core-containerQuery
///
/// @param  {string}   $root  - Root Selector as Reference
/// @param  {string}   $query - Query Condition
@mixin cqr($root,$condition) {
  $selector: &;

  @at-root {
    #{$root}#{cq('#{$condition}')} {
      #{$selector} {
        @content;
      }
    }
  }
}
